/////////////////////////////////////////////////////////////////////////////
// Name:        sudFrame.h
// Purpose:
// Author:      Thomas Gläßle
// Modified by:
// Created:     16/07/2007 18:43:18
// RCS-ID:
// Copyright:   Thomas Gläßle (C) 2007
// Licence:
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), 16/07/2007 18:43:18

#ifndef _SUDFRAME_H_
#define _SUDFRAME_H_

#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
#pragma interface "sudFrame.h"
#endif

/*!
 * Includes
 */

////@begin includes
#include "sudgendata.h"
#include "wx/frame.h"
#include "wx/tglbtn.h"
#include "wx/statusbr.h"
////@end includes

/*!
 * Forward declarations
 */

////@begin forward declarations
class sudGrid;
class wxToggleButton;
////@end forward declarations
class sudEditor;
class SudokuCreationDialog;

/*!
 * Control identifiers
 */

////@begin control identifiers
#define SYMBOL_SUDFRAME_STYLE wxCAPTION|wxRESIZE_BORDER|wxSYSTEM_MENU|wxMINIMIZE_BOX|wxMAXIMIZE_BOX|wxCLOSE_BOX
#define SYMBOL_SUDFRAME_TITLE _("wxSudoku")
#define SYMBOL_SUDFRAME_IDNAME ID_SUDOKUSOLVERFRAME
#define SYMBOL_SUDFRAME_SIZE wxDefaultSize
#define SYMBOL_SUDFRAME_POSITION wxDefaultPosition
////@end control identifiers


/*!
 * sudFrame class declaration
 */

class sudFrame: public wxFrame
{
    DECLARE_CLASS(sudFrame)
    DECLARE_EVENT_TABLE()

public:
    /// Constructors
    sudFrame();
    sudFrame(wxWindow* parent, wxWindowID id = SYMBOL_SUDFRAME_IDNAME, const wxString& caption = SYMBOL_SUDFRAME_TITLE, const wxPoint& pos = SYMBOL_SUDFRAME_POSITION, const wxSize& size = SYMBOL_SUDFRAME_SIZE, long style = SYMBOL_SUDFRAME_STYLE);

    bool Create(wxWindow* parent, wxWindowID id = SYMBOL_SUDFRAME_IDNAME, const wxString& caption = SYMBOL_SUDFRAME_TITLE, const wxPoint& pos = SYMBOL_SUDFRAME_POSITION, const wxSize& size = SYMBOL_SUDFRAME_SIZE, long style = SYMBOL_SUDFRAME_STYLE);

    /// Destructor
    ~sudFrame();

    /// Initialises member variables
    void Init();

    /// Creates the controls and sizers
    void CreateControls();


    void OnMenuitemDifficultyClick(wxCommandEvent& event);
    void OnMenuitemViewSizeClick(wxCommandEvent& event);

    /// Transfer data to the window
    virtual bool TransferDataToWindow();

    /// Transfer data from the window
    virtual bool TransferDataFromWindow();

////@begin sudFrame event handler declarations

    /// wxEVT_COMMAND_MENU_SELECTED event handler for wxID_NEW
    void OnNewClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for wxID_OPEN
    void OnOpenClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for wxID_SAVE
    void OnSaveClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for wxID_EXIT
    void OnExitClick( wxCommandEvent& event );

    /// wxEVT_UPDATE_UI event handler for ID_MENUITEM_EASY
    void OnMenuitemEasyUpdate( wxUpdateUIEvent& event );

    /// wxEVT_UPDATE_UI event handler for ID_MENUITEM_MEDIUM
    void OnMenuitemMediumUpdate( wxUpdateUIEvent& event );

    /// wxEVT_UPDATE_UI event handler for ID_MENUITEM_HARD
    void OnMenuitemHardUpdate( wxUpdateUIEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUITEM_REFILL
    void OnMenuitemRefillClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUITEM_GENERATE
    void OnMenuitemGenerateClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUITEM_CLEAR
    void OnMenuitemClearClick( wxCommandEvent& event );

    /// wxEVT_UPDATE_UI event handler for ID_MENUITEM_VIEW_SMALL
    void OnMenuitemViewSmallUpdate( wxUpdateUIEvent& event );

    /// wxEVT_UPDATE_UI event handler for ID_MENUITEM_VIEW_NORMAL
    void OnMenuitemViewNormalUpdate( wxUpdateUIEvent& event );

    /// wxEVT_UPDATE_UI event handler for ID_MENUITEM_VIEW_BIG
    void OnMenuitemViewBigUpdate( wxUpdateUIEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for wxID_ABOUT
    void OnAboutClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_CHECKBOX_CLICKED event handler for ID_SOLVER_SHOW_SOLUTION
    void OnSolverShowSolutionClick( wxCommandEvent& event );

    /// wxEVT_UPDATE_UI event handler for ID_SOLVER_SHOW_SOLUTION
    void OnSolverShowSolutionUpdate( wxUpdateUIEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_SOLVER_GENERATE
    void OnSolverGenerateClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_CHECKBOX_CLICKED event handler for ID_SOLVER_ENTER_SUDOKU
    void OnSolverEnterSudokuClick( wxCommandEvent& event );

    /// wxEVT_UPDATE_UI event handler for ID_SOLVER_ENTER_SUDOKU
    void OnSolverEnterSudokuUpdate( wxUpdateUIEvent& event );

    /// wxEVT_UPDATE_UI event handler for ID_STATUSBAR1
    void OnStatusbar1Update( wxUpdateUIEvent& event );

////@end sudFrame event handler declarations

    sudEditor* GetEditor() const;

    enum { _regen, _mutate, _refill };
    void sudGenerate(int action = _regen);

    void LoadFile(const wxString& fname);

////@begin sudFrame member function declarations

    wxString GetCurrentFile() const { return m_current_file ; }
    void SetCurrentFile(wxString value) { m_current_file = value ; }

    /// Data access
    sudGenData& GetData() { return m_data; }
    const sudGenData& GetData() const { return m_data; }
    void SetData(const sudGenData& data) { m_data = data; }

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end sudFrame member function declarations

    /// Should we show tooltips?
    static bool ShowToolTips();

////@begin sudFrame member variables
    sudGrid* m_sudgrid;
    wxToggleButton* m_button_showsolution;
    wxToggleButton* m_button_entersudoku;
    wxString m_current_file;
    /// The data edited by this window
    sudGenData m_data;
    /// Control identifiers
    enum {
        ID_SUDOKUSOLVERFRAME = 10000,
        ID_MENUITEM_EASY = 10016,
        ID_MENUITEM_MEDIUM = 10017,
        ID_MENUITEM_HARD = 10018,
        ID_MENUITEM_REFILL = 10021,
        ID_MENUITEM_GENERATE = 10020,
        ID_MENUITEM_CLEAR = 10019,
        ID_MENUITEM_VIEW_SMALL = 10030,
        ID_MENUITEM_VIEW_NORMAL = 10031,
        ID_MENUITEM_VIEW_BIG = 10032,
        ID_SOLVER_SHOW_SOLUTION = 10002,
        ID_SOLVER_GENERATE = 10005,
        ID_SOLVER_ENTER_SUDOKU = 10009,
        ID_STATUSBAR1 = 10006
    };
////@end sudFrame member variables

    int m_gentime, m_reducetime;
    bool m_generated;
};

#endif
    // _SUDFRAME_H_
