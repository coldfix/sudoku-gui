/////////////////////////////////////////////////////////////////////////////
// Name:        DualNumberEntryDialog.h
// Purpose:     
// Author:      Thomas Gl‰ﬂle
// Modified by: 
// Created:     06/01/07 13:42:02
// RCS-ID:      
// Copyright:   
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), 06/01/07 13:42:02

#ifndef _GWXDUALNUMBERENTRYDIALOG_H_
#define _GWXDUALNUMBERENTRYDIALOG_H_

#if defined(__GNUG__) && !defined(__APPLE__)
#pragma interface "DualNumberEntryDialog.cpp"
#endif

/*!
 * Includes
 */

////@begin includes
#include "wx/valgen.h"
#include "wx/spinctrl.h"
#include "wx/statline.h"
////@end includes

#include "validators.h"

/*!
 * Forward declarations
 */

////@begin forward declarations
////@end forward declarations

/*!
 * Control identifiers
 */

////@begin control identifiers
#define SYMBOL_DUALNUMBERENTRYDIALOG_STYLE wxCAPTION|wxSYSTEM_MENU|wxCLOSE_BOX
#define SYMBOL_DUALNUMBERENTRYDIALOG_TITLE _("Enter 2 numbers")
#define SYMBOL_DUALNUMBERENTRYDIALOG_IDNAME ID_DUALNUMBERENTRYDIALOG
#define SYMBOL_DUALNUMBERENTRYDIALOG_SIZE wxDefaultSize
#define SYMBOL_DUALNUMBERENTRYDIALOG_POSITION wxDefaultPosition
////@end control identifiers

/*!
 * Compatibility
 */

#ifndef wxCLOSE_BOX
#define wxCLOSE_BOX 0x1000
#endif
#ifndef wxFIXED_MINSIZE
#define wxFIXED_MINSIZE 0
#endif

namespace wxtk
{

/*!
 * DualNumberEntryDialog class declaration
 */

class DualNumberEntryDialog: public wxDialog
{    
    DECLARE_DYNAMIC_CLASS( DualNumberEntryDialog )
    DECLARE_EVENT_TABLE()

public:
    /// Constructors
    DualNumberEntryDialog( );
    DualNumberEntryDialog( wxWindow* parent, wxWindowID id = SYMBOL_DUALNUMBERENTRYDIALOG_IDNAME, const wxString& caption = SYMBOL_DUALNUMBERENTRYDIALOG_TITLE, const wxPoint& pos = SYMBOL_DUALNUMBERENTRYDIALOG_POSITION, const wxSize& size = SYMBOL_DUALNUMBERENTRYDIALOG_SIZE, long style = SYMBOL_DUALNUMBERENTRYDIALOG_STYLE );

    /// Creation
    bool Create( wxWindow* parent, wxWindowID id = SYMBOL_DUALNUMBERENTRYDIALOG_IDNAME, const wxString& caption = SYMBOL_DUALNUMBERENTRYDIALOG_TITLE, const wxPoint& pos = SYMBOL_DUALNUMBERENTRYDIALOG_POSITION, const wxSize& size = SYMBOL_DUALNUMBERENTRYDIALOG_SIZE, long style = SYMBOL_DUALNUMBERENTRYDIALOG_STYLE );

    /// Creates the controls and sizers
    void CreateControls();

////@begin DualNumberEntryDialog event handler declarations

////@end DualNumberEntryDialog event handler declarations

////@begin DualNumberEntryDialog member function declarations

    wxString GetMessage() const { return m_message ; }
    void SetMessage(wxString value) { m_message = value ; }

    wxString GetPrompt0() const { return m_prompt0 ; }
    void SetPrompt0(wxString value) { m_prompt0 = value ; }

    wxString GetPrompt1() const { return m_prompt1 ; }
    void SetPrompt1(wxString value) { m_prompt1 = value ; }

    wxtk::SpinInfo GetNumber0() const { return m_numinfo0 ; }
    void SetNumber0(wxtk::SpinInfo value) { m_numinfo0 = value ; }

    wxtk::SpinInfo GetNumber1() const { return m_numinfo1 ; }
    void SetNumber1(wxtk::SpinInfo value) { m_numinfo1 = value ; }

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end DualNumberEntryDialog member function declarations

	bool TransferDataToWindow();

    /// Should we show tooltips?
    static bool ShowToolTips();

////@begin DualNumberEntryDialog member variables
    wxString m_message;
    wxString m_prompt0;
    wxString m_prompt1;
    wxtk::SpinInfo m_numinfo0;
    wxtk::SpinInfo m_numinfo1;
    /// Control identifiers
    enum {
        ID_DUALNUMBERENTRYDIALOG = 10003,
        gwxID_DUALNUMBERENTRYDIALOG_MESSAGE = 10002,
        gwxID_DUALNUMBERENTRYDIALOG_PROMPT0 = 10000,
        gwxID_DUALNUMBERENTRYDIALOG_SPIN0 = 10006,
        gwxID_DUALNUMBERENTRYDIALOG_PROMPT1 = 10001,
        gwxID_DUALNUMBERENTRYDIALOG_SPIN1 = 10004
    };
////@end DualNumberEntryDialog member variables
};

} // ns wxtk

/*!
 * DualNumberEntryDialog class declaration
 */

class DualNumberEntryDialog: public wxDialog
{    
    DECLARE_DYNAMIC_CLASS( DualNumberEntryDialog )
    DECLARE_EVENT_TABLE()

public:
    /// Constructors
    DualNumberEntryDialog();
    DualNumberEntryDialog( wxWindow* parent, wxWindowID id = SYMBOL_DUALNUMBERENTRYDIALOG_IDNAME, const wxString& caption = SYMBOL_DUALNUMBERENTRYDIALOG_TITLE, const wxPoint& pos = SYMBOL_DUALNUMBERENTRYDIALOG_POSITION, const wxSize& size = SYMBOL_DUALNUMBERENTRYDIALOG_SIZE, long style = SYMBOL_DUALNUMBERENTRYDIALOG_STYLE );

    /// Creation
    bool Create( wxWindow* parent, wxWindowID id = SYMBOL_DUALNUMBERENTRYDIALOG_IDNAME, const wxString& caption = SYMBOL_DUALNUMBERENTRYDIALOG_TITLE, const wxPoint& pos = SYMBOL_DUALNUMBERENTRYDIALOG_POSITION, const wxSize& size = SYMBOL_DUALNUMBERENTRYDIALOG_SIZE, long style = SYMBOL_DUALNUMBERENTRYDIALOG_STYLE );

    /// Destructor
    ~DualNumberEntryDialog();

    /// Initialises member variables
    void Init();

    /// Creates the controls and sizers
    void CreateControls();

////@begin DualNumberEntryDialog event handler declarations

////@end DualNumberEntryDialog event handler declarations

////@begin DualNumberEntryDialog member function declarations

    wxString GetMessage() const { return m_message ; }
    void SetMessage(wxString value) { m_message = value ; }

    wxString GetPrompt0() const { return m_prompt0 ; }
    void SetPrompt0(wxString value) { m_prompt0 = value ; }

    wxString GetPrompt1() const { return m_prompt1 ; }
    void SetPrompt1(wxString value) { m_prompt1 = value ; }

    wxtk::SpinInfo GetNumber0() const { return m_numinfo0 ; }
    void SetNumber0(wxtk::SpinInfo value) { m_numinfo0 = value ; }

    wxtk::SpinInfo GetNumber1() const { return m_numinfo1 ; }
    void SetNumber1(wxtk::SpinInfo value) { m_numinfo1 = value ; }

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end DualNumberEntryDialog member function declarations

    /// Should we show tooltips?
    static bool ShowToolTips();

////@begin DualNumberEntryDialog member variables
    wxString m_message;
    wxString m_prompt0;
    wxString m_prompt1;
    wxtk::SpinInfo m_numinfo0;
    wxtk::SpinInfo m_numinfo1;
    /// Control identifiers
    enum {
        ID_DUALNUMBERENTRYDIALOG = 10003,
        gwxID_DUALNUMBERENTRYDIALOG_MESSAGE = 10002,
        gwxID_DUALNUMBERENTRYDIALOG_PROMPT0 = 10000,
        gwxID_DUALNUMBERENTRYDIALOG_SPIN0 = 10006,
        gwxID_DUALNUMBERENTRYDIALOG_PROMPT1 = 10001,
        gwxID_DUALNUMBERENTRYDIALOG_SPIN1 = 10004
    };
////@end DualNumberEntryDialog member variables
};

#endif
    // _GWXDUALNUMBERENTRYDIALOG_H_
