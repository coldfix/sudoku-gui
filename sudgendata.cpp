/////////////////////////////////////////////////////////////////////////////
// Name:        sudgendata.cpp
// Purpose:
// Author:      Thomas Gläßle
// Modified by:
// Created:     03/05/2008 21:57:22
// RCS-ID:
// Copyright:   Thomas Gläßle (C) 2007
// Licence:
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), 03/05/2008 21:57:22

#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
#pragma implementation "sudgendata.h"
#endif

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
#include "sudgendata.h"

////@end includes

#include "sudGen.h"


/*!
 * sudGenData type definition
 */

IMPLEMENT_DYNAMIC_CLASS( sudGenData, wxObject )

/*!
 * Default constructor for sudGenData
 */

sudGenData::sudGenData()
{
    Init();
}

/*!
 * Copy constructor for sudGenData
 */

sudGenData::sudGenData(const sudGenData& data)
{
    Init();
    Copy(data);
}

/*!
 * Destructor for sudGenData
 */

sudGenData::~sudGenData()
{
}

/*!
 * Assignment operator for sudGenData
 */

void sudGenData::operator=(const sudGenData& data)
{
    Copy(data);
}

/*!
 * Equality operator for sudGenData
 */

bool sudGenData::operator==(const sudGenData& data) const
{
////@begin sudGenData equality operator
     if (!(m_difficulty == data.m_difficulty)) return false;
     if (!(m_custom_dimensions == data.m_custom_dimensions)) return false;
     if (!(m_dimensions == data.m_dimensions)) return false;
     if (!(m_generate_sudoku == data.m_generate_sudoku)) return false;
     if (!(m_dimensions_selectedindex == data.m_dimensions_selectedindex)) return false;
////@end sudGenData equality operator
    return true;
}

/*!
 * Copy function for sudGenData
 */

void sudGenData::Copy(const sudGenData& data)
{
////@begin sudGenData copy function
    m_difficulty = data.m_difficulty;
    m_custom_dimensions = data.m_custom_dimensions;
    m_dimensions = data.m_dimensions;
    m_generate_sudoku = data.m_generate_sudoku;
    m_dimensions_selectedindex = data.m_dimensions_selectedindex;
////@end sudGenData copy function
}

/*!
 * Member initialisation for sudGenData
 */

void sudGenData::Init()
{
////@begin sudGenData member initialisation
    m_difficulty = sudGen::difficulty_medium;
    m_custom_dimensions = wxSize(-1,-1);
    m_dimensions = wxSize(3,3);
    m_generate_sudoku = true;
    m_dimensions_selectedindex = 0;
////@end sudGenData member initialisation
}
